{
    "patches": [
        {
            "label": "2025-10-25_22-37-05",
            "content": "@@ -9,73 +9,36 @@\n ssoa\n-:%0A%0A    def __init__(self, nome: str, idade: int):%0A   \n+(self, nome: str):%0A\n     \n- \n self.\n-__\n nome\n@@ -49,236 +49,8 @@\n ome%0A\n-        self.__idade = idade  %0A    %0A%0A    def __str__(self) -%3E str:%0A        return f'%7Bself.getName()%7D:%7Bself.getIdade()%7D'%0A%0A    def getName(self):%0A        return self.__nome%0A    %0A    def getIdade(self):%0A        return self.__idade%0A\n     \n@@ -99,33 +99,32 @@\n str):%0A        se\n-l\n f.pessoa: Pessoa\n@@ -141,57 +141,49 @@\n None\n-%0A        self.potencia = 1%0A        self.tempo = 0\n+ #pessoa pode ser pessoa ou pode ser nulo\n %0A%0A  \n@@ -254,14 +254,10 @@\n soa \n-is not\n+!=\n  Non\n@@ -282,29 +282,28 @@\n nt(%22\n-fail: busy motorcycle\n+j%C3%A1 tem gente na moto\n %22)%0A \n@@ -324,12 +324,11 @@\n urn \n-Fals\n+Tru\n e%0A%0A \n@@ -370,22 +370,27 @@\n  return \n-True%0A%0A\n+False%0A%0A    \n def remo\n@@ -429,721 +429,71 @@\n     \n-if self.pessoa is None:%0A            print(%22fail: empty motorcycle%22)%0A            return None%0A        %0A        aux = self.pessoa%0A        self.pessoa = None%0A        return aux%0Adef buytime (self, time: int):%0A    self.tempo += tempo%0A%0Adef drive (self, time: int):%0A    if self.tempo ==0:%0A        print(%22fail: buy time first%22)%0A        self.tempo = 0%0A        return%0A    if self.pessoa is None:%0A        print(%22fail: empty motorcycle%22)%0A        return%0A    if self.pessoa.getIdade() %3E 10:%0A        print(%22fail: too old to drive%22)%0A        return%0A    if time %3E self.time:%0A        time_driven = self.time%0A        self.time = 0%0A        print(f%22fail: time finished after %7Btime_driven%7D minutes%22)%0A    else:%0A        self.time -= time%0A%0A\n+aux = self.pessoa%0A        self.pessoa = None%0A        return aux\n %0A%0Ade\n@@ -695,190 +695,8 @@\n w%22:%0A\n-        elif args%5B0%5D==%22init%22:%0A        elif args%5B0%5D==%22enter%22:%0A        elif args%5B0%5D==%22leave%22:%0A        elif args%5B0%5D==%22buy%22:%0A        elif args%5B0%5D==%22drive%22:%0A        elif args%5B0%5D==%22honk%22:%0A\n %0A%0A%0Am\n",
            "lines": "39"
        },
        {
            "label": "2025-10-28_02-37-40",
            "content": "@@ -112,16 +112,21 @@\n  idade  \n+%0A    \n %0A%0A    de\n@@ -176,22 +176,25 @@\n elf.\n-__nome\n+getName()\n %7D:%7Bself.\n __id\n@@ -189,23 +189,26 @@\n %7D:%7Bself.\n-__i\n+getI\n dade\n+()\n %7D'%0A%0A    \n@@ -315,17 +315,16 @@\n de%0A    %0A\n-%0A\n class Mo\n@@ -327,17 +327,16 @@\n s Moto:%0A\n-%0A\n     def \n@@ -352,59 +352,21 @@\n self\n-):%0A        self.potencia = 1%0A        self.tempo = 0\n+, nome: str):\n %0A   \n@@ -408,112 +408,56 @@\n one%0A\n-%0A\n     \n-def __str__(self):%0A        return f%22power:%7Bself.potencia%7D, time:%7Bself.tempo%7D, person:%7Bself.pessoa%7D%22\n+    self.potencia = 1%0A        self.tempo = 0\n %0A%0A  \n@@ -605,16 +605,17 @@\n n False%0A\n+%0A\n         \n@@ -656,20 +656,16 @@\n n True%0A%0A\n-    \n def remo\n@@ -788,24 +788,33 @@\n return None%0A\n+        %0A\n         aux \n@@ -877,32 +877,28 @@\n aux%0A\n-%0A    \n def buy\n-T\n+t\n ime\n+ \n (self, t\n empo\n@@ -889,36 +889,35 @@\n ime (self, t\n-empo\n+ime\n : int):%0A\n         self\n@@ -896,36 +896,32 @@\n lf, time: int):%0A\n-    \n     self.tempo +\n@@ -925,28 +925,24 @@\n o += tempo%0A%0A\n-    \n def drive(se\n@@ -938,24 +938,25 @@\n ef drive\n+ \n (self, t\n empo: in\n@@ -951,24 +951,118 @@\n f, t\n-empo: int):%0A    \n+ime: int):%0A    if self.tempo ==0:%0A        print(%22fail: buy time first%22)%0A        self.tempo = 0%0A        return%0A\n     \n@@ -1077,36 +1077,32 @@\n pessoa is None:%0A\n-    \n         print(%22f\n@@ -1125,36 +1125,32 @@\n cycle%22)%0A        \n-    \n return%0A        i\n@@ -1136,36 +1136,32 @@\n      return%0A    \n- \n-   \n if self.pessoa.g\n@@ -1176,36 +1176,32 @@\n ) %3E 10:%0A        \n-   \n- \n print(%22fail: too\n@@ -1212,28 +1212,24 @@\n  to drive%22)%0A\n-    \n         retu\n@@ -1239,129 +1239,83 @@\n     \n-    if self.tempo %3C= 0:%0A            print(%22fail: buy time first%22)%0A            return%0A%0A        if tempo %3E self.tempo:%0A    \n+if time %3E self.time:%0A        time_driven = self.time%0A        self.time = 0%0A\n     \n@@ -1353,26 +1353,27 @@\n  after %7B\n-self.tempo\n+time_driven\n %7D minute\n@@ -1380,39 +1380,8 @@\n s%22)%0A\n-            self.tempo = 0%0A    \n     \n@@ -1398,99 +1398,26 @@\n     \n-    \n self.t\n-empo\n+ime\n  -= t\n-empo%0A%0A    def honk(self):%0A        print(%22P%22 + %22e%22 * self.potencia + %22m%22)\n+ime%0A\n %0A%0A%0Ad\n@@ -1509,16 +1509,17 @@\n %22 + line\n+ \n )%0A      \n@@ -1524,17 +1524,16 @@\n     args\n- \n = line.s\n@@ -1537,18 +1537,19 @@\n e.split(\n+%22%22\n )\n-%0A\n %0A       \n@@ -1559,20 +1559,18 @@\n  args%5B0%5D\n- \n ==\n- \n %22end%22:%0A \n@@ -1586,17 +1586,16 @@\n   break%0A\n-%0A\n         \n@@ -1610,20 +1610,18 @@\n s%5B0%5D\n- \n ==\n- \n %22show%22:%0A\n     \n@@ -1620,33 +1620,8 @@\n w%22:%0A\n-            print(moto)%0A%0A\n     \n@@ -1640,20 +1640,18 @@\n s%5B0%5D\n- \n ==\n- \n %22init%22:%0A\n     \n@@ -1650,35 +1650,8 @@\n t%22:%0A\n-            moto = Moto()%0A%0A\n     \n@@ -1666,20 +1666,18 @@\n  args%5B0%5D\n- \n ==\n- \n %22enter%22:\n@@ -1681,115 +1681,8 @@\n r%22:%0A\n-            nome = args%5B1%5D%0A            idade = int(args%5B2%5D)%0A            moto.inserir(Pessoa(nome, idade))%0A%0A\n     \n@@ -1697,20 +1697,18 @@\n  args%5B0%5D\n- \n ==\n- \n %22leave%22:\n@@ -1712,36 +1712,8 @@\n e%22:%0A\n-            moto.remover()%0A%0A\n     \n@@ -1732,59 +1732,17 @@\n s%5B0%5D\n- \n ==\n- \n %22buy%22:%0A\n-            moto.buyTime(int(args%5B1%5D))%0A%0A\n     \n@@ -1757,20 +1757,18 @@\n  args%5B0%5D\n- \n ==\n- \n %22drive%22:\n@@ -1772,46 +1772,8 @@\n e%22:%0A\n-            moto.drive(int(args%5B1%5D))%0A%0A\n     \n@@ -1792,20 +1792,18 @@\n s%5B0%5D\n- \n ==\n- \n %22honk%22:%0A\n     \n@@ -1802,37 +1802,86 @@\n k%22:%0A\n-            moto.honk()%0A%0A%0Amain()\n+%0A%0A%0Amain()%0A# moto = Moto()%0A# moto.inserir(Pessoa(%22fulano%22))%0A# print(moto.pessoa)%0A%0A\n %0A\n",
            "lines": "86"
        },
        {
            "label": "2025-10-28_02-39-59",
            "content": "@@ -465,111 +465,8 @@\n     \n-if self.pessoa is None:%0A        pessoa_str = %22(empty)%22%0A    else:%0A        pessoa_str = str(self.pessoa)%0A\n     \n@@ -528,23 +528,23 @@\n on:%7B\n+self.\n pessoa\n-_str\n %7D%22%0A%0A\n-%0A\n     \n",
            "lines": "101"
        },
        {
            "label": "2025-10-28_02-42-15",
            "content": "@@ -453,32 +453,135 @@\n tr__(self):%0A    \n+if self.pessoa is None:%0A        pessoa_str = %22(empty)%22%0A    else:%0A        pessoa_str = str(self.pessoa)%0A\n     return f%22pow\n@@ -631,23 +631,23 @@\n on:%7B\n-self.\n pessoa\n+_str\n %7D%22%0A%0A\n+%0A\n     \n",
            "lines": "106"
        },
        {
            "label": "2025-10-28_02-45-36",
            "content": "@@ -305,17 +305,16 @@\n e%0A    %0A%0A\n-%0A\n class Mo\n@@ -461,86 +461,8 @@\n f):%0A\n-        pessoa_str = %22(empty)%22 if self.pessoa is None else f%22(%7Bself.pessoa%7D)%22%0A\n     \n@@ -528,18 +528,19 @@\n on:%7B\n+self.\n pessoa\n-_str\n %7D%22%0A%0A\n",
            "lines": "101"
        },
        {
            "label": "2025-10-28_02-47-47",
            "content": "@@ -7,16 +7,17 @@\n Pessoa:%0A\n+%0A\n     def \n@@ -111,21 +111,18 @@\n = idade \n-%0A   \n  \n+%0A\n %0A    def\n@@ -305,16 +305,17 @@\n e%0A    %0A%0A\n+%0A\n class Mo\n@@ -318,16 +318,17 @@\n s Moto:%0A\n+%0A\n     def \n@@ -375,35 +375,36 @@\n 1%0A        self.t\n-ime\n+empo\n  = 0%0A        sel\n@@ -483,24 +483,15 @@\n r = \n-f\n %22(\n-%7Bself.pessoa%7D\n+empty\n )%22 i\n@@ -503,28 +503,24 @@\n f.pessoa is \n-not \n None else %22(\n@@ -517,18 +517,32 @@\n ne else \n+f\n %22(\n+%7Bself.pessoa%7D\n )%22%0A     \n@@ -588,19 +588,20 @@\n :%7Bself.t\n-ime\n+empo\n %7D, perso\n@@ -1080,19 +1080,20 @@\n   self.t\n-ime\n+empo\n  += temp\n@@ -1219,37 +1219,24 @@\n      return%0A\n-            %0A\n         if s\n@@ -1330,21 +1330,8 @@\n urn%0A\n-            %0A\n     \n@@ -1343,19 +1343,20 @@\n f self.t\n-ime\n+empo\n  %3C= 0:%0A \n@@ -1441,19 +1441,20 @@\n %3E self.t\n-ime\n+empo\n :%0A      \n@@ -1500,19 +1500,20 @@\n  %7Bself.t\n-ime\n+empo\n %7D minute\n@@ -1534,19 +1534,20 @@\n   self.t\n-ime\n+empo\n  = 0%0A   \n@@ -1575,19 +1575,20 @@\n   self.t\n-ime\n+empo\n  -= temp\n@@ -1604,31 +1604,24 @@\n f honk(self)\n- -%3E str\n :%0A        re\n@@ -1618,23 +1618,22 @@\n         \n-return \n+print(\n %22P%22 + %22e\n@@ -1655,16 +1655,17 @@\n ia + %22m%22\n+)\n %0A%0A%0Adef m\n@@ -1799,57 +1799,565 @@\n  if \n-not args:%0A            continue%0A%0A        cmd = args%5B0%5D\n+args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22show%22:%0A            print(moto)%0A%0A        elif args%5B0%5D == %22init%22:%0A            moto = Moto()%0A%0A        elif args%5B0%5D == %22enter%22:%0A            nome = args%5B1%5D%0A            idade = int(args%5B2%5D)%0A            moto.inserir(Pessoa(nome, idade))%0A%0A        elif args%5B0%5D == %22leave%22:%0A            moto.remover()%0A%0A        elif args%5B0%5D == %22buy%22:%0A            moto.buyTime(int(args%5B1%5D))%0A%0A        elif args%5B0%5D == %22drive%22:%0A            moto.drive(int(args%5B1%5D))%0A%0A        elif args%5B0%5D == %22honk%22:%0A            moto.honk()%0A%0A%0Amain()%0A\n",
            "lines": "103"
        },
        {
            "label": "2025-10-28_02-50-17",
            "content": "@@ -1876,1005 +1876,4 @@\n s%5B0%5D\n-%0A%0A        if cmd == %22end%22:%0A            break%0A%0A        elif cmd == %22show%22:%0A            print(moto)%0A%0A        elif cmd == %22init%22:%0A            moto = Moto()%0A%0A        elif cmd == %22enter%22:%0A            try:%0A                nome = args%5B1%5D%0A                idade = int(args%5B2%5D)%0A                moto.inserir(Pessoa(nome, idade))%0A            except (IndexError, ValueError):%0A                print(%22fail: invalid parameters for enter%22)%0A%0A        elif cmd == %22leave%22:%0A            moto.remover()%0A%0A        elif cmd == %22buy%22:%0A            try:%0A                moto.buyTime(int(args%5B1%5D))%0A            except (IndexError, ValueError):%0A                print(%22fail: invalid parameters for buy%22)%0A%0A        elif cmd == %22drive%22:%0A            try:%0A                moto.drive(int(args%5B1%5D))%0A            except (IndexError, ValueError):%0A                print(%22fail: invalid parameters for drive%22)%0A%0A        elif cmd == %22honk%22:%0A            print(moto.honk())%0A            %0A        else:%0A            print(%22fail: unknown command%22)%0A%0Amain()\n",
            "lines": "78"
        },
        {
            "label": "2025-10-28_02-50-47",
            "content": "@@ -531,21 +531,16 @@\n  else %22(\n-empty\n )%22%0A     \n",
            "lines": "118"
        },
        {
            "label": "2025-10-28_02-53-07",
            "content": "@@ -344,27 +344,8 @@\n self\n-, potencia: int = 1\n ):%0A \n@@ -367,24 +367,17 @@\n encia = \n-potencia\n+1\n %0A       \n@@ -2008,152 +2008,8 @@\n t%22:%0A\n-            try:%0A                potencia = int(args%5B1%5D)%0A                moto = Moto(potencia)%0A            except (IndexError, ValueError):%0A    \n     \n",
            "lines": "118"
        },
        {
            "label": "2025-10-28_02-54-37",
            "content": "@@ -2516,122 +2516,21 @@\n     \n-pessoa_removida = moto.remover()%0A            if pessoa_removida is not None:%0A                print(pessoa_removida\n+moto.remover(\n )%0A%0A \n",
            "lines": "122"
        },
        {
            "label": "2025-10-28_02-56-11",
            "content": "@@ -1159,109 +1159,8 @@\n t):%0A\n-        if self.time %3C= 0:%0A            print(%22fail: buy time first%22)%0A            return%0A            %0A\n     \n@@ -1365,16 +1365,117 @@\n   return\n+%0A            %0A        if self.time %3C= 0:%0A            print(%22fail: buy time first%22)%0A            return\n %0A%0A      \n@@ -1761,33 +1761,16 @@\n e True:%0A\n-        try:%0A    \n         \n@@ -1784,20 +1784,16 @@\n input()%0A\n-    \n         \n@@ -1818,20 +1818,16 @@\n         \n-  \n-  \n args = l\n@@ -1847,20 +1847,16 @@\n         \n-    \n if not a\n@@ -1872,20 +1872,16 @@\n         \n- \n-   \n continue\n@@ -1882,20 +1882,16 @@\n ntinue%0A%0A\n-    \n         \n@@ -1913,20 +1913,16 @@\n         \n- \n-   \n if cmd =\n@@ -1930,20 +1930,16 @@\n  %22end%22:%0A\n-    \n         \n@@ -1949,36 +1949,32 @@\n  break%0A%0A        \n-    \n elif cmd == %22sho\n@@ -1981,36 +1981,32 @@\n w%22:%0A            \n-   \n- \n print(moto)%0A%0A   \n@@ -2002,20 +2002,16 @@\n (moto)%0A%0A\n-    \n         \n@@ -2038,37 +2038,29 @@\n             \n-  \n-  \n try:%0A\n-    \n             \n@@ -2095,36 +2095,32 @@\n                 \n-  \n-  \n moto = Moto(pote\n@@ -2125,20 +2125,16 @@\n tencia)%0A\n-    \n         \n@@ -2178,36 +2178,32 @@\n                 \n- \n-   \n moto = Moto()%0A%0A \n@@ -2197,28 +2197,24 @@\n o = Moto()%0A%0A\n-    \n         elif\n@@ -2234,36 +2234,32 @@\n r%22:%0A            \n-    \n try:%0A           \n@@ -2263,20 +2263,16 @@\n         \n-   \n- \n nome = a\n@@ -2278,20 +2278,16 @@\n args%5B1%5D%0A\n-    \n         \n@@ -2327,28 +2327,24 @@\n             \n-   \n- \n moto.inserir\n@@ -2369,36 +2369,32 @@\n e))%0A            \n-    \n except (IndexErr\n@@ -2418,36 +2418,32 @@\n                 \n-  \n-  \n print(%22fail: inv\n@@ -2471,36 +2471,32 @@\n nter%22)%0A%0A        \n-    \n elif cmd == %22lea\n@@ -2508,28 +2508,24 @@\n             \n- \n-   \n pessoa_remov\n@@ -2545,20 +2545,16 @@\n mover()%0A\n-    \n         \n@@ -2601,28 +2601,24 @@\n             \n-    \n print(pessoa\n@@ -2629,20 +2629,16 @@\n ovida)%0A%0A\n-    \n         \n@@ -2660,36 +2660,32 @@\n y%22:%0A            \n-    \n try:%0A           \n@@ -2685,28 +2685,24 @@\n             \n-   \n- \n moto.buyTime\n@@ -2708,36 +2708,32 @@\n e(int(args%5B1%5D))%0A\n-    \n             exce\n@@ -2769,36 +2769,32 @@\n                 \n-  \n-  \n print(%22fail: inv\n@@ -2820,36 +2820,32 @@\n  buy%22)%0A%0A        \n-    \n elif cmd == %22dri\n@@ -2857,37 +2857,29 @@\n             \n- \n-   \n try:%0A\n-    \n             \n@@ -2911,36 +2911,32 @@\n %5D))%0A            \n-    \n except (IndexErr\n@@ -2944,36 +2944,32 @@\n r, ValueError):%0A\n-    \n                 \n@@ -3017,28 +3017,24 @@\n %22)%0A%0A        \n-    \n elif cmd == \n@@ -3041,20 +3041,16 @@\n %22honk%22:%0A\n-    \n         \n@@ -3088,23 +3088,17 @@\n     \n-    %0A  \n+%0A\n         \n   el\n@@ -3089,36 +3089,30 @@\n    %0A        \n-  \n else:%0A\n-    \n             \n@@ -3145,60 +3145,8 @@\n nd%22)\n-%0A        %0A        except EOFError:%0A            break\n %0A%0Ama\n",
            "lines": "124"
        },
        {
            "label": "2025-10-28_03-00-04",
            "content": "@@ -1,254 +1,17 @@\n-from typing import Optional%0A%0A# -----------------------------------------------%0A# Classe Pessoa%0A# -----------------------------------------------%0Aclass Pessoa:%0A    %22%22%22%0A    Representa os usu%C3%A1rios da motoca.%0A    Possui os atributos nome e idade.%0A    %22%22%22\n+class Pessoa:\n %0A   \n@@ -31,17 +31,17 @@\n (self, n\n-a\n+o\n me: str,\n@@ -41,18 +41,20 @@\n e: str, \n-ag\n+idad\n e: int):\n@@ -58,88 +58,8 @@\n t):%0A\n-        # Em Python, a conven%C3%A7%C3%A3o para atributos %22privados%22 %C3%A9 usar um underscore%0A\n     \n@@ -72,17 +72,18 @@\n lf._\n-na\n+_no\n me = n\n-a\n+o\n me%0A \n@@ -99,18 +99,28 @@\n lf._\n-age = age%0A\n+_idade = idade %0A    \n %0A   \n@@ -128,15 +128,15 @@\n def \n-getName\n+__str__\n (sel\n@@ -158,65 +158,46 @@\n     \n-%22%22%22Retorna o nome da pessoa.%22%22%22%0A        return self._name\n+return f'%7Bself.__nome%7D:%7Bself.__idade%7D'\n %0A%0A  \n@@ -209,24 +209,18 @@\n  get\n-Ag\n+Nam\n e(self)\n- -%3E int\n :%0A  \n@@ -229,220 +229,55 @@\n     \n-%22%22%22Retorna a idade da pessoa.%22%22%22%0A        return self._age%0A%0A    def __str__(self) -%3E str:%0A        %22%22%22%0A        Retorna uma string no formato %22nome:idade%22.%0A        Este %C3%A9 o m%C3%A9todo %22toString()%22 do Python.%0A        %22%22%22\n+return self.__nome%0A    %0A    def getIdade(self):\n %0A   \n@@ -292,152 +292,26 @@\n urn \n-f%22%7B\n self._\n-name%7D:%7Bself._age%7D%22%0A%0A# -----------------------------------------------%0A# Classe Motoca%0A# -----------------------------------------------\n+_idade%0A    %0A\n %0Acla\n@@ -321,485 +321,142 @@\n Moto\n-ca\n :%0A    \n-%22%22%22%0A    Representa a motoca em si.%0A    Controla quem est%C3%A1 na motoca, o tempo restante e a pot%C3%AAncia.%0A    %22%22%22%0A    %0A    # Parte 1: Construtor e Inserir%0A    def __init__(self, potencia: int = 1):%0A        %22%22%22%0A        Inicializa a motoca.%0A        Pot%C3%AAncia inicia com 1 (ou o valor passado), tempo com 0 e sem pessoa.%0A        %22%22%22%0A        self.potencia = potencia%0A        self.time = 0%0A        # Em Python, 'null' %C3%A9 representado por 'None'%0A        self.pessoa: Optional%5BPessoa%5D\n+def __init__(self, potencia: int = 1):%0A        self.potencia = potencia%0A        self.time = 0%0A        self.pessoa: Pessoa %7C None\n  = N\n@@ -473,39 +473,32 @@\n ef __str__(self)\n- -%3E str\n :%0A        %22%22%22%0A  \n@@ -495,242 +495,14 @@\n     \n-%22%22%22%0A        Retorna o estado da motoca no formato:%0A        power:1, time:0, person:(marcos:4)%0A        ou%0A        power:1, time:0, person:null%0A        %22%22%22%0A        # Formata a pessoa para incluir par%C3%AAnteses se ela existir%0A        person\n+pessoa\n _str\n@@ -542,18 +542,33 @@\n soa \n-else %22null\n+is not None else %22(empty)\n %22%0A  \n@@ -633,20 +633,20 @@\n rson:%7Bpe\n-rson\n+ssoa\n _str%7D%22%0A%0A\n@@ -696,133 +696,8 @@\n ol:%0A\n-        %22%22%22%0A        Tenta inserir uma pessoa na motoca.%0A        Retorna True se conseguir, False caso contr%C3%A1rio.%0A        %22%22%22%0A\n     \n@@ -796,25 +796,16 @@\n n False%0A\n-        %0A\n         \n@@ -854,204 +854,43 @@\n     \n-# Parte 2: Remover%0A    def remover(self) -%3E Optional%5BPessoa%5D:%0A        %22%22%22%0A        Remove a pessoa da motoca.%0A        Retorna a Pessoa removida ou None (null) se a motoca estiver vazia.%0A        %22%22%22\n+def remover(self) -%3E Pessoa %7C None:\n %0A   \n@@ -998,31 +998,11 @@\n     \n-%0A        removed_person\n+aux\n  = s\n@@ -1058,52 +1058,12 @@\n urn \n-removed_person%0A%0A    # Parte 3: Comprar Tempo\n+aux%0A\n %0A   \n@@ -1086,19 +1086,20 @@\n f, t\n-ime\n+empo\n : int):%0A\n     \n@@ -1098,95 +1098,8 @@\n t):%0A\n-        %22%22%22%0A        Incrementa o tempo da motoca.%0A        %22%22%22%0A        if time %3E 0:%0A    \n     \n@@ -1120,36 +1120,14 @@\n += t\n-ime\n+empo\n %0A%0A\n-    # Parte 4: Dirigir%0A\n     \n@@ -1147,28 +1147,20 @@\n f, t\n-ime_to_drive\n+empo\n : int):%0A\n     \n@@ -1159,88 +1159,8 @@\n t):%0A\n-        %22%22%22%0A        Tenta dirigir a motoca pelo tempo especificado.%0A        %22%22%22%0A\n     \n@@ -1176,17 +1176,17 @@\n lf.time \n-=\n+%3C\n = 0:%0A   \n@@ -1235,32 +1235,44 @@\n          return%0A\n+            \n %0A        if self\n@@ -1351,16 +1351,28 @@\n  return%0A\n+            \n %0A       \n@@ -1394,10 +1394,12 @@\n .get\n-Ag\n+Idad\n e() \n@@ -1471,164 +1471,38 @@\n urn%0A\n-            %0A        # Verifica se tem tempo suficiente%0A        if time_to_drive %3E= self.time:%0A            time_driven = self.time%0A            self.time = 0\n+%0A        if tempo %3E self.time:\n %0A   \n@@ -1549,19 +1549,17 @@\n er %7B\n-time_driven\n+self.time\n %7D mi\n@@ -1566,16 +1566,42 @@\n nutes%22)%0A\n+            self.time = 0%0A\n         \n@@ -1636,562 +1636,118 @@\n -= t\n-ime_to_drive%0A%0A    # Parte 5: Buzinar%0A    def honk(self) -%3E str:%0A        %22%22%22%0A        Retorna a string da buzina.%0A        O n%C3%BAmero de 'e' %C3%A9 igual %C3%A0 pot%C3%AAncia.%0A        %22%22%22%0A        return %22P%22 + %22e%22 * self.potencia + %22m%22%0A%0A# -----------------------------------------------%0A# Fun%C3%A7%C3%A3o Principal (Shell)%0A# -----------------------------------------------%0Adef main():%0A    %22%22%22%0A    L%C3%AA comandos do usu%C3%A1rio e interage com a classe Motoca.%0A    %22%22%22%0A    # Inicia a motoca conforme a descri%C3%A7%C3%A3o%0A    # A descri%C3%A7%C3%A3o de $init diz que reinicia com pot%C3%AAncia 1.%0A    motoca\n+empo%0A%0A    def honk(self) -%3E str:%0A        return %22P%22 + %22e%22 * self.potencia + %22m%22%0A%0A%0Adef main():%0A    moto\n  = Moto\n-ca(1\n+(\n )%0A%0A \n@@ -1797,24 +1797,54 @@\n e = input()%0A\n+            print(%22$%22 + line)%0A\n             \n@@ -1859,24 +1859,25 @@\n ine.split()%0A\n+%0A\n             \n@@ -1880,164 +1880,125 @@\n     \n-command = args%5B0%5D if len(args) %3E 0 else %22%22%0A%0A            if command == %22$end%22:%0A                break%0A            %0A            # $show - Mostra o estado atual\n+if not args:%0A                continue%0A%0A            cmd = args%5B0%5D%0A%0A            if cmd == %22end%22:%0A                break%0A\n %0A   \n@@ -2012,28 +2012,23 @@\n   elif c\n-omman\n+m\n d == %22\n-$\n show%22:%0A \n@@ -2056,64 +2056,10 @@\n moto\n-ca)%0A            %0A            # $init - Reinicia a motoca\n+)%0A\n %0A   \n@@ -2073,28 +2073,23 @@\n   elif c\n-omman\n+m\n d == %22\n-$\n init%22:%0A \n@@ -2107,101 +2107,55 @@\n     \n-# De acordo com a descri%C3%A7%C3%A3o, $init reinicia com pot%C3%AAncia 1.%0A                motoca = Motoca(1\n+try:%0A                    potencia = int(args%5B1%5D\n )%0A  \n@@ -2160,36 +2160,32 @@\n             \n-%0A   \n         \n  # $enter no\n@@ -2176,233 +2176,146 @@\n     \n- # $enter nome idade - Coloca uma pessoa na motoca%0A            elif command == %22$enter%22:%0A                if len(args) %3C 3:%0A                    print(%22fail: missing arguments for enter (name age)%22)%0A                    continue\n+moto = Moto(potencia)%0A                except (IndexError, ValueError):%0A                    moto = Moto()%0A%0A            elif cmd == %22enter%22:\n %0A   \n@@ -2353,17 +2353,17 @@\n        n\n-a\n+o\n me = arg\n@@ -2387,18 +2387,20 @@\n         \n-ag\n+idad\n e = int(\n@@ -2412,55 +2412,8 @@\n 2%5D)%0A\n-                    pessoa = Pessoa(name, age)%0A\n     \n@@ -2432,18 +2432,16 @@\n     moto\n-ca\n .inserir\n@@ -2445,114 +2445,27 @@\n rir(\n-p\n+P\n essoa\n-)%0A                except ValueError:%0A                    print(%22fail: invalid age, must be a number%22\n+(nome, idade)\n )%0A  \n@@ -2485,16 +2485,17 @@\n  except \n+(\n IndexErr\n@@ -2492,27 +2492,39 @@\n  (IndexError\n+, ValueError)\n :%0A\n- \n             \n@@ -2548,98 +2548,39 @@\n il: \n-missing arguments for enter (name age)%22)%0A%0A            # $leave - Remove a pessoa da motoca\n+invalid parameters for enter%22)%0A\n %0A   \n@@ -2594,28 +2594,23 @@\n   elif c\n-omman\n+m\n d == %22\n-$\n leave%22:%0A\n@@ -2624,23 +2624,39 @@\n         \n+ pessoa_removida =\n  moto\n-ca\n .remover\n@@ -2658,17 +2658,16 @@\n mover()%0A\n-%0A\n         \n@@ -2674,302 +2674,185 @@\n     \n-# $buy tempo - Compra tempo%0A            elif command == %22$buy%22:%0A                if len(args) %3C 2:%0A                    print(%22fail: missing argument for buy (time)%22)%0A                    continue%0A                try:%0A                    time = int(args%5B1%5D)%0A                    motoca.buyTime(time\n+    if pessoa_removida is not None:%0A                    print(pessoa_removida)%0A%0A            elif cmd == %22buy%22:%0A                try:%0A                    moto.buyTime(int(args%5B1%5D)\n )%0A  \n@@ -2863,32 +2863,45 @@\n           except\n+ (IndexError,\n  ValueError:%0A   \n@@ -2887,32 +2887,33 @@\n rror, ValueError\n+)\n :%0A              \n@@ -2943,94 +2943,29 @@\n lid \n-time, must be a number%22)%0A            %0A            # $drive tempo - Dirige por um tempo\n+parameters for buy%22)%0A\n %0A   \n@@ -2979,28 +2979,23 @@\n   elif c\n-omman\n+m\n d == %22\n-$\n drive%22:%0A\n@@ -3014,24 +3014,11 @@\n     \n-if len(args) %3C 2\n+try\n :%0A  \n@@ -3039,184 +3039,31 @@\n     \n-print(%22fail: missing argument for drive (time)%22)%0A                    continue%0A                try:%0A                    time = int(args%5B1%5D)%0A                    motoca.drive(time\n+moto.drive(int(args%5B1%5D)\n )%0A  \n@@ -3082,16 +3082,29 @@\n   except\n+ (IndexError,\n  ValueEr\n@@ -3102,24 +3102,25 @@\n , ValueError\n+)\n :%0A          \n@@ -3154,62 +3154,31 @@\n lid \n-time, must be a number%22)%0A%0A            # $honk - Buzina\n+parameters for drive%22)%0A\n %0A   \n@@ -3196,20 +3196,15 @@\n if c\n-omman\n+m\n d == %22\n-$\n honk\n@@ -3236,10 +3236,8 @@\n moto\n-ca\n .hon\n@@ -3280,86 +3280,8 @@\n se:%0A\n-                if command: # Evita imprimir 'fail' para linhas em branco%0A    \n     \n@@ -3323,16 +3323,24 @@\n mmand%22)%0A\n+        \n %0A       \n@@ -3380,75 +3380,8 @@\n ak%0A%0A\n-# Ponto de entrada padr%C3%A3o do Python%0Aif __name__ == %22__main__%22:%0A    \n main\n",
            "lines": "128"
        },
        {
            "label": "2025-10-28_03-03-27",
            "content": "@@ -1,2954 +1,6522 @@\n-class Person:%0A  def __init__(self, name, age):%0A    self.__name = name%0A    self.__age = age%0A%0A  def getName(self):%0A    return self.__name%0A%0A  def getAge(self):%0A    return self.__age%0A%0A  def setName(self, name):%0A    self.__name = name%0A%0A  def setAge(self, age):%0A    self.__age = age%0A%0A  def __str__(self):%0A    return f%22%7Bself.getName()%7D:%7Bself.getAge()%7D%22%0A  %0Aclass Motorcycle:%0A  def __init__(self, power: int = 1):%0A    self.__power: int = power%0A    self.__time: int = 0%0A    self.__person: Person %7C None = None%0A%0A  def getPower(self) -%3E int:%0A    return self.__power%0A%0A  def getTime(self) -%3E int:%0A    return self.__time%0A%0A  def getPerson(self) -%3E Person %7C None:%0A    return self.__person%0A%0A  def setPower(self, power: int):%0A    self.__power = power%0A%0A  def setTime(self, time: int):%0A    self.__time = time%0A%0A  def insertPerson(self, person: Person) -%3E bool:%0A    if self.getPerson() is not None:%0A      print(%22fail: busy motorcycle%22)%0A      return False%0A%0A    self.__person = person%0A    return True%0A    %0A  def remove(self) -%3E Person %7C None:%0A    if self.getPerson() is None:%0A      print(%22fail: empty motorcycle%22)%0A      return None%0A%0A    person = self.getPerson()%0A    self.__person = None%0A    return person%0A  %0A  def buyTime(self, time: int):%0A    if time %3C= 0:%0A      print(%22fail: invalid time%22)%0A      return%0A%0A    self.setTime(self.getTime() + time)%0A%0A  def drive(self, time: int):%0A    if self.getTime() %3C= 0:%0A      print(%22fail: buy time first%22)%0A      return%0A    %0A    if self.getPerson() is None:%0A      print(%22fail: empty motorcycle%22)%0A      return%0A%0A    if self.getPerson().getAge() %3E 10:%0A      print(%22fail: too old to drive%22)%0A      return%0A    %0A    if time %3E self.getTime():%0A      print(f%22fail: time finished after %7Bself.getTime()%7D minutes%22)%0A      self.setTime(0)%0A      return%0A%0A    self.setTime(self.getTime() - time)%0A%0A    if self.getTime() %3C 0:%0A      self.setTime(0)%0A      print(f%22fail: time finished after %7Btime%7D minutes%22)%0A%0A  def honk(self):%0A    print(%22P%22 + %22e%22 * self.getPower() + %22m%22)%0A%0A  def __str__(self):%0A    person_str = self.getPerson() if self.getPerson() is not None else %22empty%22%0A    return f%22power:%7Bstr(self.getPower())%7D, time:%7Bself.getTime()%7D, person:(%7Bself.getPerson() if self.getPerson() is not None else 'empty'%7D)%22%0A%0Amoto = Motorcycle()%0A%0Awhile True:%0A  command = input().split()%0A  print(f%22$%7B' '.join(command)%7D%22)%0A  %0A  if command%5B0%5D == %22end%22:%0A    break%0A  elif command%5B0%5D == %22show%22:%0A    print(moto)%0A  elif command%5B0%5D == %22enter%22:%0A    name = command%5B1%5D%0A    age = int(command%5B2%5D)%0A    person = Person(name, age)%0A    moto.insertPerson(person)%0A  elif command%5B0%5D == %22leave%22:%0A    removed = moto.remove()%0A    if removed is not None:%0A      print(removed)%0A  elif command%5B0%5D == %22buy%22:%0A    time = int(command%5B1%5D)%0A    moto.buyTime(time)%0A  elif command%5B0%5D == %22drive%22:%0A    time = int(command%5B1%5D)%0A    moto.drive(time)%0A  elif command%5B0%5D == %22honk%22:%0A    moto.honk()%0A  elif command%5B0%5D == %22init%22:%0A    power = int(command%5B1%5D)%0A    moto = Motorcycle(power)%0A  else:%0A    print(%22fail: invalid command%22\n+from typing import Optional%0A%0A# -----------------------------------------------%0A# Classe Pessoa%0A# -----------------------------------------------%0Aclass Pessoa:%0A    %22%22%22%0A    Representa os usu%C3%A1rios da motoca.%0A    Possui os atributos nome e idade.%0A    %22%22%22%0A    def __init__(self, name: str, age: int):%0A        # Em Python, a conven%C3%A7%C3%A3o para atributos %22privados%22 %C3%A9 usar um underscore%0A        self._name = name%0A        self._age = age%0A%0A    def getName(self) -%3E str:%0A        %22%22%22Retorna o nome da pessoa.%22%22%22%0A        return self._name%0A%0A    def getAge(self) -%3E int:%0A        %22%22%22Retorna a idade da pessoa.%22%22%22%0A        return self._age%0A%0A    def __str__(self) -%3E str:%0A        %22%22%22%0A        Retorna uma string no formato %22nome:idade%22.%0A        Este %C3%A9 o m%C3%A9todo %22toString()%22 do Python.%0A        %22%22%22%0A        return f%22%7Bself._name%7D:%7Bself._age%7D%22%0A%0A# -----------------------------------------------%0A# Classe Motoca%0A# -----------------------------------------------%0Aclass Motoca:%0A    %22%22%22%0A    Representa a motoca em si.%0A    Controla quem est%C3%A1 na motoca, o tempo restante e a pot%C3%AAncia.%0A    %22%22%22%0A    %0A    # Parte 1: Construtor e Inserir%0A    def __init__(self, potencia: int = 1):%0A        %22%22%22%0A        Inicializa a motoca.%0A        Pot%C3%AAncia inicia com 1 (ou o valor passado), tempo com 0 e sem pessoa.%0A        %22%22%22%0A        self.potencia = potencia%0A        self.time = 0%0A        # Em Python, 'null' %C3%A9 representado por 'None'%0A        self.pessoa: Optional%5BPessoa%5D = None%0A%0A    def __str__(self) -%3E str:%0A        %22%22%22%0A        Retorna o estado da motoca no formato:%0A        power:1, time:0, person:(marcos:4)%0A        ou%0A        power:1, time:0, person:null%0A        %22%22%22%0A        # Formata a pessoa para incluir par%C3%AAnteses se ela existir%0A        person_str = f%22(%7Bself.pessoa%7D)%22 if self.pessoa else %22null%22%0A        return f%22power:%7Bself.potencia%7D, time:%7Bself.time%7D, person:%7Bperson_str%7D%22%0A%0A    def inserir(self, pessoa: Pessoa) -%3E bool:%0A        %22%22%22%0A        Tenta inserir uma pessoa na motoca.%0A        Retorna True se conseguir, False caso contr%C3%A1rio.%0A        %22%22%22%0A        if self.pessoa is not None:%0A            print(%22fail: busy motorcycle%22)%0A            return False%0A        %0A        self.pessoa = pessoa%0A        return True%0A%0A    # Parte 2: Remover%0A    def remover(self) -%3E Optional%5BPessoa%5D:%0A        %22%22%22%0A        Remove a pessoa da motoca.%0A        Retorna a Pessoa removida ou None (null) se a motoca estiver vazia.%0A        %22%22%22%0A        if self.pessoa is None:%0A            print(%22fail: empty motorcycle%22)%0A            return None%0A        %0A        removed_person = self.pessoa%0A        self.pessoa = None%0A        return removed_person%0A%0A    # Parte 3: Comprar Tempo%0A    def buyTime(self, time: int):%0A        %22%22%22%0A        Incrementa o tempo da motoca.%0A        %22%22%22%0A        if time %3E 0:%0A            self.time += time%0A%0A    # Parte 4: Dirigir%0A    def drive(self, time_to_drive: int):%0A        %22%22%22%0A        Tenta dirigir a motoca pelo tempo especificado.%0A        %22%22%22%0A        if self.time == 0:%0A            print(%22fail: buy time first%22)%0A            return%0A%0A        if self.pessoa is None:%0A            print(%22fail: empty motorcycle%22)%0A            return%0A%0A        if self.pessoa.getAge() %3E 10:%0A            print(%22fail: too old to drive%22)%0A            return%0A            %0A        # Verifica se tem tempo suficiente%0A        if time_to_drive %3E= self.time:%0A            time_driven = self.time%0A            self.time = 0%0A            print(f%22fail: time finished after %7Btime_driven%7D minutes%22)%0A        else:%0A            self.time -= time_to_drive%0A%0A    # Parte 5: Buzinar%0A    def honk(self) -%3E str:%0A        %22%22%22%0A        Retorna a string da buzina.%0A        O n%C3%BAmero de 'e' %C3%A9 igual %C3%A0 pot%C3%AAncia.%0A        %22%22%22%0A        return %22P%22 + %22e%22 * self.potencia + %22m%22%0A%0A# -----------------------------------------------%0A# Fun%C3%A7%C3%A3o Principal (Shell)%0A# -----------------------------------------------%0Adef main():%0A    %22%22%22%0A    L%C3%AA comandos do usu%C3%A1rio e interage com a classe Motoca.%0A    %22%22%22%0A    # Inicia a motoca conforme a descri%C3%A7%C3%A3o%0A    # A descri%C3%A7%C3%A3o de $init diz que reinicia com pot%C3%AAncia 1.%0A    motoca = Motoca(1)%0A%0A    while True:%0A        try:%0A            line = input()%0A            args = line.split()%0A            command = args%5B0%5D if len(args) %3E 0 else %22%22%0A%0A            if command == %22$end%22:%0A                break%0A            %0A            # $show - Mostra o estado atual%0A            elif command == %22$show%22:%0A                print(motoca)%0A            %0A            # $init - Reinicia a motoca%0A            elif command == %22$init%22:%0A                # De acordo com a descri%C3%A7%C3%A3o, $init reinicia com pot%C3%AAncia 1.%0A                motoca = Motoca(1)%0A            %0A            # $enter nome idade - Coloca uma pessoa na motoca%0A            elif command == %22$enter%22:%0A                if len(args) %3C 3:%0A                    print(%22fail: missing arguments for enter (name age)%22)%0A                    continue%0A                try:%0A                    name = args%5B1%5D%0A                    age = int(args%5B2%5D)%0A                    pessoa = Pessoa(name, age)%0A                    motoca.inserir(pessoa)%0A                except ValueError:%0A                    print(%22fail: invalid age, must be a number%22)%0A                except IndexError:%0A                     print(%22fail: missing arguments for enter (name age)%22)%0A%0A            # $leave - Remove a pessoa da motoca%0A            elif command == %22$leave%22:%0A                motoca.remover()%0A%0A            # $buy tempo - Compra tempo%0A            elif command == %22$buy%22:%0A                if len(args) %3C 2:%0A                    print(%22fail: missing argument for buy (time)%22)%0A                    continue%0A                try:%0A                    time = int(args%5B1%5D)%0A                    motoca.buyTime(time)%0A                except ValueError:%0A                    print(%22fail: invalid time, must be a number%22)%0A            %0A            # $drive tempo - Dirige por um tempo%0A            elif command == %22$drive%22:%0A                if len(args) %3C 2:%0A                    print(%22fail: missing argument for drive (time)%22)%0A                    continue%0A                try:%0A                    time = int(args%5B1%5D)%0A                    motoca.drive(time)%0A                except ValueError:%0A                    print(%22fail: invalid time, must be a number%22)%0A%0A            # $honk - Buzina%0A            elif command == %22$honk%22:%0A                print(motoca.honk())%0A                %0A            else:%0A                if command: # Evita imprimir 'fail' para linhas em branco%0A                    print(%22fail: unknown command%22)%0A%0A        except EOFError:%0A            break%0A%0A# Ponto de entrada padr%C3%A3o do Python%0Aif __name__ == %22__main__%22:%0A    main(\n )\n",
            "lines": "212"
        },
        {
            "label": "2025-10-28_03-10-31",
            "content": "class Person:\n  def __init__(self, name, age):\n    self.__name = name\n    self.__age = age\n\n  def getName(self):\n    return self.__name\n\n  def getAge(self):\n    return self.__age\n\n  def setName(self, name):\n    self.__name = name\n\n  def setAge(self, age):\n    self.__age = age\n\n  def __str__(self):\n    return f\"{self.getName()}:{self.getAge()}\"\n  \nclass Motorcycle:\n  def __init__(self, power: int = 1):\n    self.__power: int = power\n    self.__time: int = 0\n    self.__person: Person | None = None\n\n  def getPower(self) -> int:\n    return self.__power\n\n  def getTime(self) -> int:\n    return self.__time\n\n  def getPerson(self) -> Person | None:\n    return self.__person\n\n  def setPower(self, power: int):\n    self.__power = power\n\n  def setTime(self, time: int):\n    self.__time = time\n\n  def insertPerson(self, person: Person) -> bool:\n    if self.getPerson() is not None:\n      print(\"fail: busy motorcycle\")\n      return False\n\n    self.__person = person\n    return True\n    \n  def remove(self) -> Person | None:\n    if self.getPerson() is None:\n      print(\"fail: empty motorcycle\")\n      return None\n\n    person = self.getPerson()\n    self.__person = None\n    return person\n  \n  def buyTime(self, time: int):\n    if time <= 0:\n      print(\"fail: invalid time\")\n      return\n\n    self.setTime(self.getTime() + time)\n\n  def drive(self, time: int):\n    if self.getTime() <= 0:\n      print(\"fail: buy time first\")\n      return\n    \n    if self.getPerson() is None:\n      print(\"fail: empty motorcycle\")\n      return\n\n    if self.getPerson().getAge() > 10:\n      print(\"fail: too old to drive\")\n      return\n    \n    if time > self.getTime():\n      print(f\"fail: time finished after {self.getTime()} minutes\")\n      self.setTime(0)\n      return\n\n    self.setTime(self.getTime() - time)\n\n    if self.getTime() < 0:\n      self.setTime(0)\n      print(f\"fail: time finished after {time} minutes\")\n\n  def honk(self):\n    print(\"P\" + \"e\" * self.getPower() + \"m\")\n\n  def __str__(self):\n    person_str = self.getPerson() if self.getPerson() is not None else \"empty\"\n    return f\"power:{str(self.getPower())}, time:{self.getTime()}, person:({self.getPerson() if self.getPerson() is not None else 'empty'})\"\n\nmoto = Motorcycle()\n\nwhile True:\n  command = input().split()\n  print(f\"${' '.join(command)}\")\n  \n  if command[0] == \"end\":\n    break\n  elif command[0] == \"show\":\n    print(moto)\n  elif command[0] == \"enter\":\n    name = command[1]\n    age = int(command[2])\n    person = Person(name, age)\n    moto.insertPerson(person)\n  elif command[0] == \"leave\":\n    removed = moto.remove()\n    if removed is not None:\n      print(removed)\n  elif command[0] == \"buy\":\n    time = int(command[1])\n    moto.buyTime(time)\n  elif command[0] == \"drive\":\n    time = int(command[1])\n    moto.drive(time)\n  elif command[0] == \"honk\":\n    moto.honk()\n  elif command[0] == \"init\":\n    power = int(command[1])\n    moto = Motorcycle(power)\n  else:\n    print(\"fail: invalid command\")",
            "lines": "128"
        }
    ]
}